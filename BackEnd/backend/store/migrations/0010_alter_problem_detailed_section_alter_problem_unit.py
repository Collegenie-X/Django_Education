# Generated by Django 4.2.9 on 2024-08-01 07:37

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0009_alter_problem_description_alter_problem_difficulty_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='problem',
            name='detailed_section',
            field=models.CharField(blank=True, choices=[('Counting small numbers', 'Counting small numbers'), ('Numbers 0 to 100', 'Numbers 0 to 100'), ('Comparing small numbers', 'Comparing small numbers'), ('Teens', 'Teens'), ('Add within 10', 'Add within 10'), ('Subtraction within 10', 'Subtraction within 10'), ('Comparing size', 'Comparing size'), ('Comparing length', 'Comparing length'), ('Basic shapes', 'Basic shapes'), ('Numbers from 0 to 120', 'Numbers from 0 to 120'), ('Ones and Tens', 'Ones and Tens'), ('Comparing Two-digit numbers', 'Comparing Two-digit numbers'), ('Relate addition and subtraction', 'Relate addition and subtraction'), ('Addition within 20', 'Addition within 20'), ('Subtraction within 20', 'Subtraction within 20'), ('Equal sign', 'Equal sign'), ('Missing Number within 20', 'Missing Number within 20'), ('Length', 'Length'), ('Size', 'Size'), ('Shapes', 'Shapes'), ('Fractions of shape', 'Fractions of shape'), ('Add within 20', 'Add within 20'), ('Subtract within 20', 'Subtract within 20'), ('Add and subtract within 20', 'Add and subtract within 20'), ('Add using arrays', 'Add using arrays'), ('Numbers in word form', 'Numbers in word form'), ('Constant of proportionality', 'Constant of proportionality'), ('Compare and interpret constants of proportionality', 'Compare and interpret constants of proportionality'), ('Identifying proportional relationships', 'Identifying proportional relationships'), ('Rate problems with fractions', 'Rate problems with fractions'), ('Converting fractions to decimals', 'Converting fractions to decimals'), ('Slope', 'Slope'), ('x-intercepts and y-intercepts', 'x-intercepts and y-intercepts')], default='', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='problem',
            name='unit',
            field=models.CharField(blank=True, choices=[('Counting', 'Counting'), ('Addition and Subtraction', 'Addition and Subtraction'), ('Measurement and geometry', 'Measurement and geometry'), ('Without Image', 'Without Image'), ('Addition and Subtraction', 'Addition and Subtraction'), ('Measurement, Data, and Geometry', 'Measurement, Data, and Geometry'), ('Without Image', 'Without Image'), ('Place Value', 'Place Value'), ('Add and subtract within 100', 'Add and subtract within 100'), ('Add and subtract within 1000', 'Add and subtract within 1000'), ('Data', 'Data'), ('Measurement', 'Measurement'), ('Money', 'Money'), ('Time', 'Time'), ('What is Multiplication?', 'What is Multiplication?'), ('One-digit Multiplication', 'One-digit Multiplication'), ('Addition, Subtraction, and estimation', 'Addition, Subtraction, and estimation'), ('What is Division?', 'What is Division?'), ('Understanding Fractions', 'Understanding Fractions'), ('Comparing Fractions and equivalent fractions', 'Comparing Fractions and equivalent fractions'), ('More with Multiplication and Division', 'More with Multiplication and Division'), ('Arithmetic patterns and problem solving', 'Arithmetic patterns and problem solving'), ('Representing and Interpreting Data', 'Representing and Interpreting Data'), ('Quadrilaterals', 'Quadrilaterals'), ('Area', 'Area'), ('Perimeter', 'Perimeter'), ('Measurement', 'Measurement')], default='', max_length=100, null=True),
        ),
    ]
